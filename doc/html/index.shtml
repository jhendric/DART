<HTML>
<HEAD>
<TITLE>DART start</TITLE>
<BODY BGCOLOR="#EEEEEE">

<H1>Things the DART need to know.</H1>

For the purpose of simplicity, I am assuming you will be creating your
<TT>DART</TT> sandbox on a machine that need not be in CGD. It the 
machine IS inside CGD, the directions do not change 
(but this is a bit of overkill).

<P> I have named the project repository <TT>DART</TT> so when you check 
out the repository, your sandbox will be installed in a directory also 
called <TT>DART</TT>. You can sue me later. At this point, it is in
my home directory, we will move it when the RAID array is operational.
[That should be a momentary inconvenience.] Since it is in my home
directory, I would ask that you not add any large files to the repository,
such as object or data files. At this time, I have about 300MB of space
and the current project is about 3+MB; so I don't really envision
this to be a problem any time soon.

<H1>Table of Contents</H1>
<OL><LI><A HREF="#sandbox">Creating a local copy of the project</A>
    <LI><A HREF="#CodingStandards">Coding Standards</A>
    <LI><A HREF="#build">Building an executable</A>
    <LI><A HREF="#AssimilationSequence">The Assimilation Sequence</A>
    <LI><A HREF="http://www.cgd.ucar.edu/~thoar/cvs_primer.html">my cheat-sheet of CVS commands</A>
    <LI><A HREF="#acronyms">acronyms</A>
</OL>

<P><b>Hmnnnnn</b> how does the group enter into play?   
<PRE>newgrp cgddart</PRE>

I predict this will be useful ...
<PRE>chgrp -R cgddart DART</PRE>


<P><HR>
<P>
<A NAME="sandbox">
<H1>To create a local version of the project ... a "sandbox"</H1>

<P>The current "tag" of the project is <TT>rel-0-0</TT>&nbsp. 
We need to come up with a policy regarding when to "commit" a 
sandbox to the repository. (i.e. does it need to pass a test suite...)

<OL><LI><A HREF="#sandboxCGD">on a CGD filesystem</A>
    <LI><A HREF="#sandboxSSH">on a remote filesystem using SSH</A>
</OL>

<P>
<!-- CGD sandbox ------------------------------------------------------>
<A NAME="sandboxCGD">
<H2>On a CGD filesystem</H2>
This example presumes csh or tcsh syntax ...
<UL><LI>Set your CVSROOT environment variable to point to the repository. 
        <PRE>setenv CVSROOT /home/thoar/CVS.REPOS</PRE>
    <LI>make sure you are in the proper group <PRE>newgrp cgddart</PRE>
    <LI>move to wherever you want the sandbox, create the project.
        <PRE>cd /data/$USER/
cvs co DART</PRE>
-- OR -- if you don't want the sandbox to live in a directory called 
something other than <TT>DART</TT>
<PRE>cvs co -d SomeOtherName DART</PRE>
    <LI>Play till the cows come home.
    <LI>When you want to update the repository <PRE>cvs update
cvs commit <font color="#0000FF">[-m "your message goes here"]</font></PRE>
    <LI>And, if you like, you can remove the sandbox. Simply deleting the
        sandbox counfounds CVS' ability to track who has the project checked out.
        Gracefully exiting is appreciated. 
        <PRE>cd ..<directory above sandbox>
cvs release -d DART</PRE>
</UL>

<P>
<!-- remote sandbox --------------------------------------------------->
<A NAME="sandboxSSH">
<H2>On a remote filesystem</H2>
This presumes you have a valid account on goldhill and are running csh,tcsh
on a remote machine. 
<OL><LI>From your remote machine, set some environment variables and
        check out the project: <PRE>setenv CVS_RSH ssh
setenv CVSROOT :ext:goldhill.cgd.ucar.edu:/home/thoar/CVS.REPOS
cvs co DART</PRE>
The first two commands can be (should be) put in your dotfiles.
If you are using multiple CVS repositories, you can obviate the need
to keep switching your CVSROOT variable by using this alternate form of the
"checkout" command:  

<PRE>setenv CVS_RSH ssh
cvs -d :ext:goldhill.cgd.ucar.edu:/home/thoar/CVS.REPOS co DART</PRE>

    <LI>Play till the cows come home.
    <LI>When you want to update the repository <PRE>cvs update
cvs commit <font color="#0000FF">[-m "your message goes here"]</font></PRE>
    <LI>And, if you like, you can remove the sandbox. Simply deleting the
        sandbox counfounds CVS' ability to track who has the project checked out.
        Gracefully exiting is appreciated. 
        <PRE>cd ..<directory above sandbox>
cvs release -d DART</PRE>
</OL>

Creating some ssh keys (
<A HREF="http://www.cgd.ucar.edu/pipermail/ccsm-progs/2001-April/000092.html">
ssh-keygen</A> ) is a great way to avoid botching your password every time you issue a 
cvs command when using ssh.

<!--------------------------------------------------------------------->
<!-- Coding Standards ------------------------------------------------->
<!--------------------------------------------------------------------->

<P>
<A NAME="CodingStandards">
<H1>Coding Standards <FONT size=-1>all of which are worth beer</FONT></H1>
I can think of no reason why the 
<A HREF="http://www.cgd.ucar.edu/cms/ccm4/codingstandard.shtml">
CCM4 Coding Standard</A> should not work for us. I don't want
to keep making cosmetic changes to the code, so we might as well
do it the same way from the start. 

Additionally, I prefer to
<OL><LI>Indent by three spaces
    <LI>separate full-line comments by a line of whitespace on each side
    <LI>Comment lines should be indented as though they were code.
</OL>

<!--------------------------------------------------------------------->
<!-- Building an Executable ------------------------------------------->
<!--------------------------------------------------------------------->

<P>
<A NAME="build">
<H1>Build</H1>
Right now, there is a script <TT>compile_it</TT> that does the heavy lifting.
It is currently configured to be run from the <TT>work</TT> directory.
<TT>../compile_it</TT> ingests <TT>path_names_for_modules</TT> which has
(in addition to a bunch of PATHS) the compile directives for the project.
<TT>path_names_for_modules</TT> is fundamentally a menu. Uncomment the
chunks you want. As you explore new platforms, please update the compile options.  

<PRE>
cd DART/work
vi path_names_for_modules       <FONT COLOR="#ff0000">;# uncomment items</FONT>
../compile_it <FONT COLOR="#0000FF">seq_obs</FONT>           <FONT COLOR="#ff0000">;# for example</FONT>
./seq_obs <FONT COLOR="#0000FF">| tee seq_obs.log</FONT>     <FONT COLOR="#ff0000">;# if you want to get fancy</FONT></PRE>

Jeff claims you can use any of the (case-insensitive) versions of any of the shell
variables in <TT>path_names_for_modules</TT> as the argument to <TT>compile_it</TT>.

<P>I am exploring Brian Eaton's perl scripts to facilitate the build.
/fs/cgd/home0/eaton/bin/mkSrcfiles<BR>
/fs/cgd/home0/eaton/bin/mkDepends<BR> 
ingest a file that contains F90 pathnames and generates a makefile with
the proper dependencies, as long as the module names are consistent with
the filenames containing the module.

<A HREF="http://www.gnu.org/software/autoconf/">autoconf</A> 
to generate the makefile. Will explore ... after I understand the 
staus quo "build" procedure.

<P>Really want to use 
<A HREF="http://www.gnu.org/software/autoconf/">autoconf</A> 
to generate the makefile. Will explore ... after I understand the 
staus quo "build" procedure.


<!--------------------------------------------------------------------->
<!-- The Overall Assimilation Sequence -------------------------------->
<!--------------------------------------------------------------------->

<P>
<A NAME="AssimilationSequence">
<H1>Assimilation sequence</H1>
<OL><LI>model_mod
       <OL><LI>init_model()
          <LI>get_model_size()
          <LI>init_conditions()
          <LI>adv_1step()
             <OL><LI>adv_true_state(x)
             </OL>
          <LI>advance()
       </OL>
    <LI>model_output(x,time)
    <LI>diag_output_index(1:9)
    <LI>get_close_pts ... `distance'
    <LI>state_loc ... array of meta_data
</OL>


<P>
<A NAME="acronyms">
<H1>Acronyms</H1>

<TABLE>
<TR><TH>Alphabet Soup &nbsp &nbsp</TH><TH ALIGN="LEFT">Description</TH></TR>

<TR><TD>CVS   </TD><TD>Concurrent Versions System</TD></TR>
<TR><TD>DA    </TD><TD> Data Assimilation</TD></TR>
<TR><TD>DAI   </TD><TD> Data Assimilation Initiative</TD></TR>
<TR><TD>DART  </TD><TD> Data Assimilation Research Testbed</TD></TR>
<TR><TD>DODS  </TD><TD> Distributed Oceanographic Data Server</TD></TR>
<TR><TD>EAKF  </TD><TD> Ensemble Adjustment Kalman Filter</TD></TR>
<TR><TD>EnKF  </TD><TD> Ensemble Kalman Filter</TD></TR>
<TR><TD>ESMF  </TD><TD>Earth System Modeling Framework</TD></TR>
<TR><TD>L96   </TD><TD>the Lorenz 96 model</TD></TR>
<TR><TD>NetCDF</TD><TD>Network Common Data Format</TD></TR>
<TR><TD>OSSE  </TD><TD>Observing System Simulation Experiment</TD></TR>
<TR><TD>PE    </TD><TD>Primitive Equations</TD></TR>
<TR><TD>RMS   </TD><TD>Root Mean Square (Error)</TD></TR>
<TR><TD>RMSE  </TD><TD>Root Mean Square Error</TD></TR>
<TR><TD>TLM   </TD><TD>Tangent Linear Model</TD></TR>
<TR><TD>WRF   </TD><TD>Weather Research and Forecasting Model</TD></TR>
</TABLE>

<P>
<HR>
<P>
Document: <!--#echo var="DOCUMENT_URI" --> <BR>
Last modified: <!--#echo var="LAST_MODIFIED" --> <BR>
<a href="mailto:thoar@ucar.edu">Tim Hoar - thoar@ucar.edu</a>
</BODY>
</HTML>
