#!/bin/csh
#
# Data Assimilation Research Testbed -- DART
# Copyright 2004-2009, Data Assimilation Research Section
# University Corporation for Atmospheric Research
# Licensed under the GPL -- www.gpl.org/licenses/gpl.html
#
# <next few lines under version control, do not edit>
# $URL: https://subversion.ucar.edu/DAReS/DART/trunk/models/lorenz_96/work/mkmf_wakeup_filter $
# $Id: mkmf_wakeup_filter 3440 2008-07-01 23:07:15Z thoar $
# $Revision: 3440 $
# $Date: 2008-07-01 17:07:15 -0600 (Tue, 01 Jul 2008) $

# usage: mkmf_filter_done [ -mpi ]
#  without any args, builds filter_done without mpi libraries, and it will run
#  as a normal executable. if -mpi is given, it will be compiled with the mpi
#  libraries and can run with multiple cooperating processes.

if ( $#argv > 0 ) then
  if ("$argv[1]" == "-mpi") then
    setenv usingmpi 1
  else
    echo "Unrecognized argument to mkmf_filter_done: $argv[1]"
    echo "Usage: mkmf_filter_done [ -mpi ]"
    echo " default is to generate a Makefile without MPI support."
    exit -1
  endif
else
  setenv usingmpi 0
endif


# make a backup copy of the path_names file, and then use
# sed to make sure it includes either the non-mpi subroutines,
# or the subroutines which really call mpi.
cp -f path_names_filter_done path_names_filter_done.back

if ( $usingmpi ) then

  echo "Making Makefile with MPI"
  touch using_mpi_for_filter_done
  sed -e 's;/null_mpi_util;/mpi_util;' path_names_filter_done.back >! path_names_filter_done
  setenv wrapper_arg -w

else

  echo "Making Makefile without MPI"
  rm -f using_mpi_for_filter_done
  sed -e 's;/mpi_util;/null_mpi_util;' path_names_filter_done.back >! path_names_filter_done
  setenv wrapper_arg ""

endif

# remove temp file and now really call mkmf to generate makefile
rm -f path_names_filter_done.back

../../../mkmf/mkmf -p filter_done -t ../../../mkmf/mkmf.template -c"-Duse_netCDF" \
        -a "../../.." ${wrapper_arg} path_names_filter_done

