#!/bin/csh
#
# Data Assimilation Research Testbed -- DART
# Copyright 2004-2007, Data Assimilation Research Section
# University Corporation for Atmospheric Research
# Licensed under the GPL -- www.gpl.org/licenses/gpl.html
#

# usage: mkmf_scale_nogaps_perts [ -mpi | -nompi ]
#  without any args, builds filter without mpi libraries, and it will run
#  as a normal executable. if -mpi is given, it will be compiled with the mpi
#  libraries and can run with multiple cooperating processes.

if ( $#argv > 0 ) then
  if ("$argv[1]" == "-mpi") then
    setenv usingmpi 1
  else if ("$argv[1]" == "-nompi") then
    setenv usingmpi 0
  else
    echo "Unrecognized argument to mkmf_filter: $argv[1]"
    echo "Usage: mkmf_scale_nogaps_perts [ -mpi | -nompi ]"
    echo " default is to generate a Makefile without MPI support."
    exit -1
  endif
else
  setenv usingmpi 0
endif


# make a backup copy of the path_names file, and then use
# sed to make sure it includes either the non-mpi subroutines,
# or the subroutines which really call mpi.
set path_name = 'path_names_scale_nogaps_perts'
cp -f ${path_name} ${path_name}.back

if ( $usingmpi ) then

  echo "Making Makefile with MPI"
  touch using_mpi_for_scale_nogaps_perts
  sed -e 's;/null_mpi_util;/mpi_util;' ${path_name}.back >! ${path_name}
  setenv wrapper_arg -w

else

  echo "Making Makefile without MPI"
  rm -f using_mpi_for_scale_nogaps_perts
  sed -e 's;/mpi_util;/null_mpi_util;' ${path_name}.back >! ${path_name}
  setenv wrapper_arg ""

endif

# remove temp file and now really call mkmf to generate makefile
rm -f ${path_name}.back

../../../mkmf/mkmf -p scale_nogaps_perts -t ../../../mkmf/mkmf.template -c"-Duse_netCDF" \
        -a "../../.." ${wrapper_arg} ${path_name}

