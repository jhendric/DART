# Template for Lahey F95 Compiler on Linux clusters
#  and workstations
#
# DART software - Copyright 2004 - 2011 UCAR. This open source software is
# provided by UCAR, "as is", without charge, subject to all terms of use at
# http://www.image.ucar.edu/DAReS/DART/DART_download
#
# <next few lines under version control, do not edit>
# $URL$
# $Id$
# $Revision$
# $Date$

# typical use with mkmf
# mkmf -t mkmf.template.xxxx -c"-Duse_netCDF" ...
#
# NETCDF and LIBS need to be customized for your site
# for machines at NCAR, here are some settings:
#   fisher     NETCDF = /home/thoar/netcdf-3.5.1-cc-c++-lf95.6.20a
#   lightning  NETCDF = /contrib/netcdf/3.5.1-lahey-6.2-32
#   bangkok    NETCDF = /usr/local/netcdf-3.6.1-gcc-3.4.6-lf9562
#
# FFLAGS   useful for benchmarking
#    --ap                    preserve arithmetic accuracy in the face of optimization
#    -Ktrap=fp               trap floating point exceptions and EXIT
#    -pc 64                  use 64bit register precision (useful for comparison)
#    -v                      verbose compile
#    -O0                     no optimization
#
# FFLAGS
#    -O2
#    -ap                 ensure consistent arithmetic precision
#    -Wa,--32            pass on to loader ... (32 bit compile)
#    --trap  trap ndp exceptions
#    --verbose
#    --warn
#    --wide
#    --O0    no optimization
#    --chk [<args>]
#             check for:
#                subscripts and substrings out of bounds,
#                interface mismatches,
#                uninitialized variables.
#             Arguments can be combined (separated by commas).
#         <args>:
#             a   argument checking.  
#             e   array expression shape checking.  
#             s   subscript checking.  
#             u   undefined variable checking.  
#             x   extra checking.
#    --chkglobal
#    --verbose
#    --wo     warn if obsolescent feature
#
# FFLAGS   useful for production
#    --li    use Lahey intrinsic procedures
#    --o1    classical, memory, and interprocedural optimizations
#    --o2    -o1 + loop and array optimizations
#    --sse2  optimize using SSE2 instructions
#
# FFLAGS   for historical reasons
#    --dbl   does the autopromotion
# NOTE: 'noieee' "... produces results that differ from the correctly rounded 
#                 result by no more than 3 units in the last place."
#
# Compiler Information:   (lf95 --version)
#    Lahey/Fujitsu Fortran 95 Compiler Release L6.20c
#    Copyright (C) 1994-2003 Lahey Computer Systems.  All rights reserved.
#    Copyright (C) 1998-2003 FUJITSU LIMITED. All rights reserved.
#
# Compiler Information (lf95 -V):
#   Lahey/Fujitsu Fortran 95 Compiler Release L6.20a
#   Copyright (C) 1994-2003 Lahey Computer Systems.  All rights reserved.
#   Copyright (C) 1998-2003 FUJITSU LIMITED. All rights reserved.
#
#

MPIFC = mpif90
MPILD = mpif90
FC = lf95
LD = lf95

# If your NETCDF environment variable is not set correctly, 
# uncomment the following line and set value properly. 
# NETCDF = /contrib/netcdf/3.5.1-lahey-6.2-32

INCS = -I$(NETCDF)/include
LIBS = -L$(NETCDF)/lib -lnetcdf
FFLAGS  = -Wa,--32 --trap --wide --o2 $(INCS)
LDFLAGS = $(FFLAGS) $(LIBS)

# for debugging or development, here are some suggested flags:
#FFLAGS = --ap --trap --warn --wide --chk a,s,u,x --o0 $(INCS) 
