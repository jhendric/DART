# Template for GNU gfortran and Mac OSX
#
# Data Assimilation Research Testbed -- DART
# Copyright 2004-2006, Data Assimilation Initiative, 
# University Corporation for Atmospheric Research
# Licensed under the GPL -- www.gpl.org/licenses/gpl.html
#
# <next two lines are maintained by CVS, please do not edit>
# $Id$
# $Name$
#
# typical use with mkmf
# mkmf -t mkmf.template.xxxx -c"-Duse_netCDF" ...
#
# Most likely NETCDF and LIBS need to be customized for your site
#
# 
# Building DART with open-source software:
# 
# All the parts (except matlab, which is optional and used to display results)
# needed to build and run the DART package are now possible to get free from 
# the open-source community.  To compile and run DART, you will need:
# 
#
# 1. The GNU GCC 4.0 version of the gfortran compiler.  See this web page for
#    information on supported platforms and downloads: 
#      http://gcc.gnu.org/wiki/GFortran
# 
#    (Note that there is a separate G95 project which distributes an alternate
#    open-source fortran distribution, and I have heard that others have 
#    successfully compiled other fortran code with that compiler, but I have
#    not tried it myself.)
# 
# 
# 2. The netCDF software library package.  See:
#      http://www.unidata.ucar.edu/software/netcdf
# 
#    The 3.6.1 version needed to be configured and compiled like this:
# 
#     ./configure --prefix=/usr/local CC=gcc FC=gfortran F90FLAGS=-ff2c \
#                 FFLAGS="-ff2c -fsecond-underscore" CPPFLAGS=-Df2cFortran
#     make
#     make install
# 
#    The claim is that the upcoming 3.6.2 version will build without setting 
#    any flags other than the compiler names.  If you build the netCDF libs
#    without the {F90,F,CPP}FLAGS the library will build ok, but when you try
#    to link applications with it symbols will not be found because of
#    a mismatch with trailing underscores on the subroutine names.
# 
# 
# Notes:
#  The bgrid_solo model does not compile at this time with version 4.2.0
#  of gfortran.  The model code uses the 'transfer' intrinsic which is
#  not yet working in gfortran.  All other dart code compiled cleanly.
#
# Possibly useful flags:
#
# -ffree-form          forces input file to be read as free format regardless 
#                      of what file extension is has.
#
# -fdefault-real-8     force all real variables to be real*8.
#
# -fsecond-underscore  match external symbols in the netcdf libraries
# 
# 


FC = gfortran
LD = gfortran
NETCDF = /usr/local
INCS = ${NETCDF}/include
FFLAGS = -I$(INCS) -fsecond-underscore
LIBS = -L${NETCDF}/lib -lnetcdf
LDFLAGS = -I$(INCS) $(LIBS)

